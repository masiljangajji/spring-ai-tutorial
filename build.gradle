plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.5'
    id 'io.spring.dependency-management' version '1.1.7'
}

ext {
    springAiVersion = "1.0.1"
}

group = 'com.spring.ai'
version = '0.0.1-SNAPSHOT'
description = 'Spring - AI Tutorial'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}


configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' } // M6, M7 같은 milestone 버전 받을 때 필요
}

ext {
    set('springAiVersion', "1.0.0-M6")
}


dependencies {

    // Spring AI 의존성
    implementation 'org.springframework.ai:spring-ai-openai-spring-boot-starter'

    // parameter store
    implementation platform('io.awspring.cloud:spring-cloud-aws-dependencies:3.4.0')
    implementation 'io.awspring.cloud:spring-cloud-aws-starter-parameter-store'

    // Swagger/OpenAPI 의존성
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.5'

    implementation 'org.springframework.boot:spring-boot-starter-web'

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.ai:spring-ai-bom:${property("springAiVersion")}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
